<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.moviesys.dao.ScheduleMapper">

    <!--Mybatis框架在通过spring-db.xml中的mapperLocations属性指定的路径中得到映射文件的路径以后，会全部加载并解析这些映射文件-->
    <!--上述这个动作实际上是Mybatis通过Spring完成的-->
    <!--接下来它会把这个映射文件根据命名空间的声明，找到对应的Mapper接口，将各个SQL的id与Mapper接口中的各个方法对应上-->

   <select id="findScheduleMovie" resultType="Movie">
       select * from movie where status in(0,1) and state=1
   </select>
    


    <!--通过电影id查相应的档期-->
    <select id="findScheduleListByMovieId" resultType="Schedule">
        select s.* from schedule s
            left join movie m on s.movie_id = m.id
            where m.id=#{id}
    </select>

    <select id="findScheduleById" resultType="Schedule">
        select * from schedule where id=#{id};
    </select>

    <select id="findMoviesNoGearPage" resultType="Movie">
        select * from movie where status in(0,1) and state=1
    </select>

    <insert id="save" parameterType="Schedule">
        insert into schedule values(null,#{movieId},#{start},#{end},0)
    </insert>

    <delete id="delete" parameterType="int">
        delete from schedule where id=#{id}
    </delete>

    <update id="updateStatus" parameterType="hashmap">
        update movie set status = #{status} where id = #{id}
    </update>



</mapper>